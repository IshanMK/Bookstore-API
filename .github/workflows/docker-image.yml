name: Build, Test, and Deploy Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build Docker image
        run: |
          docker build -t bookstore-api .

      - name: Run Docker containers
        run: |
          docker-compose up -d

      - name: Wait for MongoDB to start
        run: |
          sleep 30 # Increase wait time if necessary

      - name: Seed the database
        run: |
          docker-compose exec app node seed.js

      - name: Test Create Book
        run: |
          curl -X POST http://mongodb:3000/books \
          -H "Content-Type: application/json" \
          -d '{"title": "The Art of Computer Programming", "author": "Donald Knuth", "isbn": "9780201896831", "price": 89.99}' \
          -w "%{http_code}" -o response.log
          grep -q "201" response.log || exit 1

      - name: Test Get All Books
        run: |
          curl -X GET http://mongodb:3000/books \
          -w "%{http_code}" -o response.log
          grep -q "200" response.log || exit 1

      - name: Test Get Book by ISBN
        run: |
          curl -X GET http://mongodb:3000/books/isbn/9780201896831 \
          -w "%{http_code}" -o response.log
          grep -q "200" response.log || exit 1

      - name: Test Update Book
        run: |
          curl -X PUT http://mongodb:3000/books/isbn/9780201896831 \
          -H "Content-Type: application/json" \
          -d '{"price": 99.99}' \
          -w "%{http_code}" -o response.log
          grep -q "200" response.log || exit 1

      - name: Test Delete Book
        run: |
          curl -X DELETE http://mongodb:3000/books/isbn/9780201896831 \
          -w "%{http_code}" -o response.log
          grep -q "200" response.log || exit 1

      - name: Stop and remove Docker containers
        run: |
          docker-compose down
